name: Build AWX Lab Image

on:
  push:
    branches: [ "main" ]
    paths:
      - 'awx/**'

  workflow_dispatch:

jobs:
  build_awx:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
          
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: awx/env

      - name: Install python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Checkout awx
        uses: actions/checkout@v3
        with:
          repository: ansible/awx
          ref: ${{ env.VERSION }}
          path: ansible-awx

      - name: Checkout awx-logos
        uses: actions/checkout@v2
        with:
          repository: ansible/awx-logos
          path: awx-logos

      - name: Install playbook dependencies
        run: pip install docker

      - name: Build AWX
        working-directory: ansible-awx
        env:
          ANSIBLE_STDOUT_CALLBACK: debug
        run: |
          ansible-playbook -v tools/ansible/build.yml \
          -e awx_image=$IMAGE_NAME \
          -e awx_version=$VERSION \
          -e ansible_python_interpreter=$(which python3) \
          -e push=no \
          -e awx_official=yes

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build multi-arch base image
        uses: docker/build-push-action@v3
        with:
          push: false
          context: ./ansible-awx
          tags: latest
          labels: local/ansible-awx
          platforms: linux/arm64,linux/amd64
          build-args: |
            VERSION=${{ env.VERSION }}
            SETUPTOOLS_SCM_PRETEND_VERSION=${{ env.VERSION }}
            HEADLESS=False

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
          tags: ${{ env.VERSION }}

      - name: Build and publish lab image
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./awx
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64,linux/amd64
          build-args: |
            VERSION=${{ env.VERSION }}
