name: Build

on:
  workflow_call:
    inputs:
      image:
        description: 'Base Directory of image to build'
        required: true
        type: string

  workflow_dispatch:
    inputs:
      image:
        description: 'Base Directory of image to build'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/ansible-awx
        if: ${{ inputs.image }} == "ansible-awx"
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ inputs.image }}/env

      - name: Install python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
        if: ${{ env.PYTHON_VERSION }} != ""
      
      - id: requirements_txt
        uses: andstor/file-existence-action@v2
        with:
          files: ./${{ inputs.image }}/requirements.txt

      - name: Install python requirements
        run: pip install -r ./${{ inputs.image }}/requirements.txt
        if: steps.requirements_txt.outputs.files_exists == 'true'

      - id: pre_build
        uses: andstor/file-existence-action@v2
        with:
          files: ./${{ inputs.image }}/pre_build.sh

      - name: Run pre-build script
        run: ./${{ inputs.image }}/pre_build.sh
        if: steps.pre_build.outputs.files_exists == 'true'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}
          tags: ${{ env.VERSION }}

      - name: Build and publish image
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./${{ env.BUILD_CONTEXT || inputs.image }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64,linux/amd64
          # I couldn't figure out a way for multi-line environment
          # variables to correctly evaluate to multi-line build args
          # so this is my sad solution
          build-args: |
            ${{ env.BUILD_ARG_1 }}
            ${{ env.BUILD_ARG_2 }}
            ${{ env.BUILD_ARG_3 }}
            ${{ env.BUILD_ARG_4 }}
            ${{ env.BUILD_ARG_5 }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
