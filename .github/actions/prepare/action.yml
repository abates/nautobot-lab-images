name: Prepare
description: prep the environment for building
inputs:
  image:
    description: 'Base Directory of image to build'
    required: true
    type: string
  github_token:
    description: 'Github token for logging into container registry'
    required: true
    type: string

outputs:
  tags:
    description: "Container tags for pushing to registry"
    value: ${{ steps.meta.outputs.tags }}
  labels:
    description: "Container labels for pushing to registry"
    value: ${{ steps.meta.outputs.labels }}


runs:
  using: "composite"

  # Steps represent a sequence of tasks that will be executed as part of the job
  steps:
    - id: build_env
      uses: andstor/file-existence-action@v2
      with:
        files: ./${{ inputs.image }}/build_env

    - uses: c-py/action-dotenv-to-setenv@v2
      with:
        env-file: ${{ inputs.image }}/build_env
      if: steps.build_env.outputs.files_exists == 'true'

    - name: Install python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
      if: ${{ env.PYTHON_VERSION }} != ""
    
    - id: requirements_txt
      uses: andstor/file-existence-action@v2
      with:
        files: ./${{ inputs.image }}/requirements.txt

    - name: Install python requirements
      shell: bash
      run: pip install -r ./${{ inputs.image }}/requirements.txt
      if: steps.requirements_txt.outputs.files_exists == 'true'

    - id: pre_build
      uses: andstor/file-existence-action@v2
      with:
        files: ./${{ inputs.image }}/pre_build.sh

    - name: Run pre-build script
      shell: bash
      run: ./${{ inputs.image }}/pre_build.sh
      if: steps.pre_build.outputs.files_exists == 'true'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}
        tags: |
          ${{ env.VERSION }}
          latest

    - id: action_file
      uses: andstor/file-existence-action@v2
      with:
        files: ./${{ inputs.image }}/action.yml

    - name: "Copy image action"
      shell: bash
      run: cp ./${{ inputs.image }}/action.yml ./.github/actions/pre_build/action.yml
      if: steps.action_file.outputs.files_exists == 'true'

    - name: "Copy noop action"
      shell: bash
      run: cp ./.github/actions/noop/action.yml ./.github/actions/pre_build/action.yml
      if: steps.action_file.outputs.files_exists == 'false'

